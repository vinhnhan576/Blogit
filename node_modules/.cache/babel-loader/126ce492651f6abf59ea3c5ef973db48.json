{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport Axios from \"axios\";\nexport const accountSlice = createSlice({\n  name: \"account\",\n  initialState: {\n    account: null\n  },\n  reducers: {\n    login: (state, action) => {\n      console.log(action.payload.username);\n      axios({\n        url: \"http://localhost:5000/auth\",\n        method: \"get\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json;charset=UTF-8\"\n        },\n        data: {\n          username: action.payload.username,\n          password: action.payload.password\n        }\n      }).then(res => {\n        console.log(res);\n        if (res) state.account = action.payload;else state.account = null;\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    logout: state => {\n      state.account = null;\n    }\n  }\n});\nexport const {\n  login,\n  logout\n} = accountSlice.actions;\nexport const selectAccount = state => state.account.account;\nexport default accountSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","Axios","accountSlice","name","initialState","account","reducers","login","state","action","console","log","payload","username","url","method","headers","Accept","data","password","then","res","catch","error","logout","actions","selectAccount","reducer"],"sources":["D:/Code/HTML/BlogProject/client/src/features/account/accountSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport Axios from \"axios\";\r\n\r\nexport const accountSlice = createSlice({\r\n\tname: \"account\",\r\n\tinitialState: {\r\n\t\taccount: null,\r\n\t},\r\n\treducers: {\r\n\t\tlogin: (state, action) => {\r\n\t\t\tconsole.log(action.payload.username);\r\n\t\t\taxios({\r\n\t\t\t\turl: \"http://localhost:5000/auth\",\r\n\t\t\t\tmethod: \"get\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\tAccept: \"application/json\",\r\n\t\t\t\t\t\"Content-Type\": \"application/json;charset=UTF-8\",\r\n\t\t\t\t},\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tusername: action.payload.username,\r\n\t\t\t\t\tpassword: action.payload.password,\r\n\t\t\t\t},\r\n\t\t\t})\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\tif (res) state.account = action.payload;\r\n\t\t\t\t\telse state.account = null;\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t},\r\n\t\tlogout: (state) => {\r\n\t\t\tstate.account = null;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { login, logout } = accountSlice.actions;\r\n\r\nexport const selectAccount = (state) => state.account.account;\r\n\r\nexport default accountSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAGJ,WAAW,CAAC;EACvCK,IAAI,EAAE,SADiC;EAEvCC,YAAY,EAAE;IACbC,OAAO,EAAE;EADI,CAFyB;EAKvCC,QAAQ,EAAE;IACTC,KAAK,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACzBC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAP,CAAeC,QAA3B;MACAb,KAAK,CAAC;QACLc,GAAG,EAAE,4BADA;QAELC,MAAM,EAAE,KAFH;QAGLC,OAAO,EAAE;UACRC,MAAM,EAAE,kBADA;UAER,gBAAgB;QAFR,CAHJ;QAOLC,IAAI,EAAE;UACLL,QAAQ,EAAEJ,MAAM,CAACG,OAAP,CAAeC,QADpB;UAELM,QAAQ,EAAEV,MAAM,CAACG,OAAP,CAAeO;QAFpB;MAPD,CAAD,CAAL,CAYEC,IAZF,CAYQC,GAAD,IAAS;QACdX,OAAO,CAACC,GAAR,CAAYU,GAAZ;QACA,IAAIA,GAAJ,EAASb,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACG,OAAvB,CAAT,KACKJ,KAAK,CAACH,OAAN,GAAgB,IAAhB;MACL,CAhBF,EAiBEiB,KAjBF,CAiBSC,KAAD,IAAW;QACjBb,OAAO,CAACC,GAAR,CAAYY,KAAZ;MACA,CAnBF;IAoBA,CAvBQ;IAwBTC,MAAM,EAAGhB,KAAD,IAAW;MAClBA,KAAK,CAACH,OAAN,GAAgB,IAAhB;IACA;EA1BQ;AAL6B,CAAD,CAAhC;AAmCP,OAAO,MAAM;EAAEE,KAAF;EAASiB;AAAT,IAAoBtB,YAAY,CAACuB,OAAvC;AAEP,OAAO,MAAMC,aAAa,GAAIlB,KAAD,IAAWA,KAAK,CAACH,OAAN,CAAcA,OAA/C;AAEP,eAAeH,YAAY,CAACyB,OAA5B"},"metadata":{},"sourceType":"module"}