{"ast":null,"code":"import { createSlice, createAsyncThunk, nanoid } from '@reduxjs/toolkit';\nimport Axios from 'axios';\nimport serverUrl from '../common';\nconst blogUrl = 'api/blog';\nexport const getAllBlogsByUserIDAsync = createAsyncThunk('blogs/getAllBlogsByUserIDAsync', async userID => {\n  const response = await Axios.get(`${serverUrl}${blogUrl}?userID=${userID}`);\n  const tasks = response.data;\n  return {\n    tasks\n  };\n});\nexport const getBlogBySlugAsync = createAsyncThunk('blog/getBlogBySlugAsync', async slug => {\n  const response = await Axios.get(`${serverUrl}${blogUrl}/get-blog-by-slug?slug=${slug}`);\n  const tasks = response.data;\n  return {\n    tasks\n  };\n});\nexport const createNewBlogAsync = createAsyncThunk('blog/createNewBlogAsync', async _ref => {\n  let {\n    blogReqData\n  } = _ref;\n  const formData = new FormData();\n  formData.append('title');\n  const response = await Axios.post(serverUrl + blogUrl, blogReqData);\n  const tasks = response.data;\n  return {\n    tasks\n  };\n});\nexport const updateBlogAsync = createAsyncThunk('blog/updateBlogAsync', async _ref2 => {\n  let {\n    blogReqData\n  } = _ref2;\n  const id = blogReqData.id;\n  const response = await Axios.put(`${serverUrl}${blogUrl}/${id}`, blogReqData);\n  const tasks = response.data;\n  console.log(tasks);\n  return {\n    tasks\n  };\n});\nexport const deleteBlogAsync = createAsyncThunk('blog/deleteBlogAsync', async id => {\n  const response = await Axios.delete(`${serverUrl}${blogUrl}/${id}`);\n  window.location.reload(false);\n  const tasks = response.data;\n  return {\n    tasks\n  };\n});\nconst blogSlice = createSlice({\n  name: 'blog',\n  initialState: [],\n  reducers: {},\n  extraReducers: {\n    [getAllBlogsByUserIDAsync.fulfilled]: (state, action) => {\n      console.log('fetching blogs by userID successfully');\n      return action.payload.tasks.result;\n    },\n    [getBlogBySlugAsync.fulfilled]: (state, action) => {\n      console.log('fetching blog by slug successfully');\n      return action.payload.tasks.result;\n    },\n    [createNewBlogAsync.fulfilled]: (state, action) => {\n      console.log('added new blog successfully');\n      return action.payload.tasks.result;\n    },\n    [updateBlogAsync.fulfilled]: (state, action) => {\n      console.log('updated blog successfully');\n      return action.payload.tasks.result;\n    }\n  }\n});\nexport const {} = blogSlice.actions;\nexport const selectPost = state => state.blog.blog;\nexport default blogSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","nanoid","Axios","serverUrl","blogUrl","getAllBlogsByUserIDAsync","userID","response","get","tasks","data","getBlogBySlugAsync","slug","createNewBlogAsync","blogReqData","formData","FormData","append","post","updateBlogAsync","id","put","console","log","deleteBlogAsync","delete","window","location","reload","blogSlice","name","initialState","reducers","extraReducers","fulfilled","state","action","payload","result","actions","selectPost","blog","reducer"],"sources":["D:/Code/HTML/BlogProject/client/src/features/post/blogSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk, nanoid } from '@reduxjs/toolkit';\r\nimport Axios from 'axios';\r\nimport serverUrl from '../common';\r\n\r\nconst blogUrl = 'api/blog';\r\n\r\nexport const getAllBlogsByUserIDAsync = createAsyncThunk(\r\n    'blogs/getAllBlogsByUserIDAsync',\r\n    async (userID) => {\r\n        const response = await Axios.get(\r\n            `${serverUrl}${blogUrl}?userID=${userID}`\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const getBlogBySlugAsync = createAsyncThunk(\r\n    'blog/getBlogBySlugAsync',\r\n    async (slug) => {\r\n        const response = await Axios.get(\r\n            `${serverUrl}${blogUrl}/get-blog-by-slug?slug=${slug}`\r\n        );\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const createNewBlogAsync = createAsyncThunk(\r\n    'blog/createNewBlogAsync',\r\n    async ({ blogReqData }) => {\r\n        const formData = new FormData();\r\n        formData.append('title', )\r\n        const response = await Axios.post(serverUrl + blogUrl, blogReqData);\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const updateBlogAsync = createAsyncThunk(\r\n    'blog/updateBlogAsync',\r\n    async ({ blogReqData }) => {\r\n        const id = blogReqData.id;\r\n        const response = await Axios.put(\r\n            `${serverUrl}${blogUrl}/${id}`,\r\n            blogReqData\r\n        );\r\n        const tasks = response.data;\r\n        console.log(tasks);\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nexport const deleteBlogAsync = createAsyncThunk(\r\n    'blog/deleteBlogAsync',\r\n    async (id) => {\r\n        const response = await Axios.delete(`${serverUrl}${blogUrl}/${id}`);\r\n        window.location.reload(false);\r\n        const tasks = response.data;\r\n        return { tasks };\r\n    }\r\n);\r\n\r\nconst blogSlice = createSlice({\r\n    name: 'blog',\r\n    initialState: [],\r\n    reducers: {},\r\n    extraReducers: {\r\n        [getAllBlogsByUserIDAsync.fulfilled]: (state, action) => {\r\n            console.log('fetching blogs by userID successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n        [getBlogBySlugAsync.fulfilled]: (state, action) => {\r\n            console.log('fetching blog by slug successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n        [createNewBlogAsync.fulfilled]: (state, action) => {\r\n            console.log('added new blog successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n        [updateBlogAsync.fulfilled]: (state, action) => {\r\n            console.log('updated blog successfully');\r\n            return action.payload.tasks.result;\r\n        },\r\n    },\r\n});\r\nexport const {} = blogSlice.actions;\r\n\r\nexport const selectPost = (state) => state.blog.blog;\r\n\r\nexport default blogSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}